/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the GitHub repository of this plugin.
*/

var ct=Object.create;var te=Object.defineProperty;var gt=Object.getOwnPropertyDescriptor;var yt=Object.getOwnPropertyNames;var pt=Object.getPrototypeOf,ft=Object.prototype.hasOwnProperty;var ht=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),mt=(t,e)=>{for(var r in e)te(t,r,{get:e[r],enumerable:!0})},Pe=(t,e,r,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let u of yt(e))!ft.call(t,u)&&u!==r&&te(t,u,{get:()=>e[u],enumerable:!(o=gt(e,u))||o.enumerable});return t};var ke=(t,e,r)=>(r=t!=null?ct(pt(t)):{},Pe(e||!t||!t.__esModule?te(r,"default",{value:t,enumerable:!0}):r,t)),wt=t=>Pe(te({},"__esModule",{value:!0}),t);var ce=ht((Zt,Me)=>{var vt=Object.create,ae=Object.defineProperty,bt=Object.getOwnPropertyDescriptor,Nt=Object.getOwnPropertyNames,Pt=Object.getPrototypeOf,kt=Object.prototype.hasOwnProperty,At=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),Ot=(t,e)=>{for(var r in e)ae(t,r,{get:e[r],enumerable:!0})},Ee=(t,e,r,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let u of Nt(e))!kt.call(t,u)&&u!==r&&ae(t,u,{get:()=>e[u],enumerable:!(o=bt(e,u))||o.enumerable});return t},B=(t,e,r)=>(r=t!=null?vt(Pt(t)):{},Ee(e||!t||!t.__esModule?ae(r,"default",{value:t,enumerable:!0}):r,t)),St=t=>Ee(ae({},"__esModule",{value:!0}),t),J=At(t=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var e=require("obsidian"),r="YYYY-MM-DD",o="gggg-[W]ww",u="YYYY-MM",y="YYYY-[Q]Q",v="YYYY";function b(a){var n,i;let l=window.app.plugins.getPlugin("periodic-notes");return l&&((i=(n=l.settings)==null?void 0:n[a])==null?void 0:i.enabled)}function m(){var a,n,i,l;try{let{internalPlugins:s,plugins:d}=window.app;if(b("daily")){let{format:c,folder:N,template:k}=((n=(a=d.getPlugin("periodic-notes"))==null?void 0:a.settings)==null?void 0:n.daily)||{};return{format:c||r,folder:(N==null?void 0:N.trim())||"",template:(k==null?void 0:k.trim())||""}}let{folder:g,format:p,template:f}=((l=(i=s.getPluginById("daily-notes"))==null?void 0:i.instance)==null?void 0:l.options)||{};return{format:p||r,folder:(g==null?void 0:g.trim())||"",template:(f==null?void 0:f.trim())||""}}catch(s){console.info("No custom daily note settings found!",s)}}function M(){var a,n,i,l,s,d,g;try{let p=window.app.plugins,f=(a=p.getPlugin("calendar"))==null?void 0:a.options,c=(i=(n=p.getPlugin("periodic-notes"))==null?void 0:n.settings)==null?void 0:i.weekly;if(b("weekly"))return{format:c.format||o,folder:((l=c.folder)==null?void 0:l.trim())||"",template:((s=c.template)==null?void 0:s.trim())||""};let N=f||{};return{format:N.weeklyNoteFormat||o,folder:((d=N.weeklyNoteFolder)==null?void 0:d.trim())||"",template:((g=N.weeklyNoteTemplate)==null?void 0:g.trim())||""}}catch(p){console.info("No custom weekly note settings found!",p)}}function V(){var a,n,i,l;let s=window.app.plugins;try{let d=b("monthly")&&((n=(a=s.getPlugin("periodic-notes"))==null?void 0:a.settings)==null?void 0:n.monthly)||{};return{format:d.format||u,folder:((i=d.folder)==null?void 0:i.trim())||"",template:((l=d.template)==null?void 0:l.trim())||""}}catch(d){console.info("No custom monthly note settings found!",d)}}function R(){var a,n,i,l;let s=window.app.plugins;try{let d=b("quarterly")&&((n=(a=s.getPlugin("periodic-notes"))==null?void 0:a.settings)==null?void 0:n.quarterly)||{};return{format:d.format||y,folder:((i=d.folder)==null?void 0:i.trim())||"",template:((l=d.template)==null?void 0:l.trim())||""}}catch(d){console.info("No custom quarterly note settings found!",d)}}function z(){var a,n,i,l;let s=window.app.plugins;try{let d=b("yearly")&&((n=(a=s.getPlugin("periodic-notes"))==null?void 0:a.settings)==null?void 0:n.yearly)||{};return{format:d.format||v,folder:((i=d.folder)==null?void 0:i.trim())||"",template:((l=d.template)==null?void 0:l.trim())||""}}catch(d){console.info("No custom yearly note settings found!",d)}}function ge(...a){let n=[];for(let l=0,s=a.length;l<s;l++)n=n.concat(a[l].split("/"));let i=[];for(let l=0,s=n.length;l<s;l++){let d=n[l];!d||d==="."||i.push(d)}return n[0]===""&&i.unshift(""),i.join("/")}function Ye(a){let n=a.substring(a.lastIndexOf("/")+1);return n.lastIndexOf(".")!=-1&&(n=n.substring(0,n.lastIndexOf("."))),n}async function qe(a){let n=a.replace(/\\/g,"/").split("/");if(n.pop(),n.length){let i=ge(...n);window.app.vault.getAbstractFileByPath(i)||await window.app.vault.createFolder(i)}}async function G(a,n){n.endsWith(".md")||(n+=".md");let i=e.normalizePath(ge(a,n));return await qe(i),i}async function U(a){let{metadataCache:n,vault:i}=window.app,l=e.normalizePath(a);if(l==="/")return Promise.resolve(["",null]);try{let s=n.getFirstLinkpathDest(l,""),d=await i.cachedRead(s),g=window.app.foldManager.load(s);return[d,g]}catch(s){return console.error(`Failed to read the daily note template '${l}'`,s),new e.Notice("Failed to read the daily note template"),["",null]}}function O(a,n="day"){let i=a.clone().startOf(n).format();return`${n}-${i}`}function ye(a){return a.replace(/\[[^\]]*\]/g,"")}function je(a,n){if(n==="week"){let i=ye(a);return/w{1,2}/i.test(i)&&(/M{1,4}/.test(i)||/D{1,4}/.test(i))}return!1}function H(a,n){return pe(a.basename,n)}function Ue(a,n){return pe(Ye(a),n)}function pe(a,n){let i={day:m,week:M,month:V,quarter:R,year:z}[n]().format.split("/").pop(),l=window.moment(a,i,!0);if(!l.isValid())return null;if(je(i,n)&&n==="week"){let s=ye(i);if(/w{1,2}/i.test(s))return window.moment(a,i.replace(/M{1,4}/g,"").replace(/D{1,4}/g,""),!1)}return l}var He=class extends Error{};async function fe(a){let n=window.app,{vault:i}=n,l=window.moment,{template:s,format:d,folder:g}=m(),[p,f]=await U(s),c=a.format(d),N=await G(g,c);try{let k=await i.create(N,p.replace(/{{\s*date\s*}}/gi,c).replace(/{{\s*time\s*}}/gi,l().format("HH:mm")).replace(/{{\s*title\s*}}/gi,c).replace(/{{\s*(date|time)\s*(([+-]\d+)([yqmwdhs]))?\s*(:.+?)?}}/gi,(S,D,$,A,w,h)=>{let oe=l(),se=a.clone().set({hour:oe.get("hour"),minute:oe.get("minute"),second:oe.get("second")});return $&&se.add(parseInt(A,10),w),h?se.format(h.substring(1).trim()):se.format(d)}).replace(/{{\s*yesterday\s*}}/gi,a.clone().subtract(1,"day").format(d)).replace(/{{\s*tomorrow\s*}}/gi,a.clone().add(1,"d").format(d)));return n.foldManager.save(k,f),k}catch(k){console.error(`Failed to create file: '${N}'`,k),new e.Notice("Unable to create new file.")}}function Qe(a,n){var i;return(i=n[O(a,"day")])!=null?i:null}function Ve(){let{vault:a}=window.app,{folder:n}=m(),i=a.getAbstractFileByPath(e.normalizePath(n));if(!i)throw new He("Failed to find daily notes folder");let l={};return e.Vault.recurseChildren(i,s=>{if(s instanceof e.TFile){let d=H(s,"day");if(d){let g=O(d,"day");l[g]=s}}}),l}var Re=class extends Error{};function ze(){let{moment:a}=window,n=a.localeData()._week.dow,i=["sunday","monday","tuesday","wednesday","thursday","friday","saturday"];for(;n;)i.push(i.shift()),n--;return i}function Ge(a){return ze().indexOf(a.toLowerCase())}async function he(a){let{vault:n}=window.app,{template:i,format:l,folder:s}=M(),[d,g]=await U(i),p=a.format(l),f=await G(s,p);try{let c=await n.create(f,d.replace(/{{\s*(date|time)\s*(([+-]\d+)([yqmwdhs]))?\s*(:.+?)?}}/gi,(N,k,S,D,$,A)=>{let w=window.moment(),h=a.clone().set({hour:w.get("hour"),minute:w.get("minute"),second:w.get("second")});return S&&h.add(parseInt(D,10),$),A?h.format(A.substring(1).trim()):h.format(l)}).replace(/{{\s*title\s*}}/gi,p).replace(/{{\s*time\s*}}/gi,window.moment().format("HH:mm")).replace(/{{\s*(sunday|monday|tuesday|wednesday|thursday|friday|saturday)\s*:(.*?)}}/gi,(N,k,S)=>{let D=Ge(k);return a.weekday(D).format(S.trim())}));return window.app.foldManager.save(c,g),c}catch(c){console.error(`Failed to create file: '${f}'`,c),new e.Notice("Unable to create new file.")}}function Be(a,n){var i;return(i=n[O(a,"week")])!=null?i:null}function Je(){let a={};if(!we())return a;let{vault:n}=window.app,{folder:i}=M(),l=n.getAbstractFileByPath(e.normalizePath(i));if(!l)throw new Re("Failed to find weekly notes folder");return e.Vault.recurseChildren(l,s=>{if(s instanceof e.TFile){let d=H(s,"week");if(d){let g=O(d,"week");a[g]=s}}}),a}var Ke=class extends Error{};async function me(a){let{vault:n}=window.app,{template:i,format:l,folder:s}=V(),[d,g]=await U(i),p=a.format(l),f=await G(s,p);try{let c=await n.create(f,d.replace(/{{\s*(date|time)\s*(([+-]\d+)([yqmwdhs]))?\s*(:.+?)?}}/gi,(N,k,S,D,$,A)=>{let w=window.moment(),h=a.clone().set({hour:w.get("hour"),minute:w.get("minute"),second:w.get("second")});return S&&h.add(parseInt(D,10),$),A?h.format(A.substring(1).trim()):h.format(l)}).replace(/{{\s*date\s*}}/gi,p).replace(/{{\s*time\s*}}/gi,window.moment().format("HH:mm")).replace(/{{\s*title\s*}}/gi,p));return window.app.foldManager.save(c,g),c}catch(c){console.error(`Failed to create file: '${f}'`,c),new e.Notice("Unable to create new file.")}}function Ze(a,n){var i;return(i=n[O(a,"month")])!=null?i:null}function Xe(){let a={};if(!ve())return a;let{vault:n}=window.app,{folder:i}=V(),l=n.getAbstractFileByPath(e.normalizePath(i));if(!l)throw new Ke("Failed to find monthly notes folder");return e.Vault.recurseChildren(l,s=>{if(s instanceof e.TFile){let d=H(s,"month");if(d){let g=O(d,"month");a[g]=s}}}),a}var et=class extends Error{};async function tt(a){let{vault:n}=window.app,{template:i,format:l,folder:s}=R(),[d,g]=await U(i),p=a.format(l),f=await G(s,p);try{let c=await n.create(f,d.replace(/{{\s*(date|time)\s*(([+-]\d+)([yqmwdhs]))?\s*(:.+?)?}}/gi,(N,k,S,D,$,A)=>{let w=window.moment(),h=a.clone().set({hour:w.get("hour"),minute:w.get("minute"),second:w.get("second")});return S&&h.add(parseInt(D,10),$),A?h.format(A.substring(1).trim()):h.format(l)}).replace(/{{\s*date\s*}}/gi,p).replace(/{{\s*time\s*}}/gi,window.moment().format("HH:mm")).replace(/{{\s*title\s*}}/gi,p));return window.app.foldManager.save(c,g),c}catch(c){console.error(`Failed to create file: '${f}'`,c),new e.Notice("Unable to create new file.")}}function at(a,n){var i;return(i=n[O(a,"quarter")])!=null?i:null}function nt(){let a={};if(!be())return a;let{vault:n}=window.app,{folder:i}=R(),l=n.getAbstractFileByPath(e.normalizePath(i));if(!l)throw new et("Failed to find quarterly notes folder");return e.Vault.recurseChildren(l,s=>{if(s instanceof e.TFile){let d=H(s,"quarter");if(d){let g=O(d,"quarter");a[g]=s}}}),a}var it=class extends Error{};async function rt(a){let{vault:n}=window.app,{template:i,format:l,folder:s}=z(),[d,g]=await U(i),p=a.format(l),f=await G(s,p);try{let c=await n.create(f,d.replace(/{{\s*(date|time)\s*(([+-]\d+)([yqmwdhs]))?\s*(:.+?)?}}/gi,(N,k,S,D,$,A)=>{let w=window.moment(),h=a.clone().set({hour:w.get("hour"),minute:w.get("minute"),second:w.get("second")});return S&&h.add(parseInt(D,10),$),A?h.format(A.substring(1).trim()):h.format(l)}).replace(/{{\s*date\s*}}/gi,p).replace(/{{\s*time\s*}}/gi,window.moment().format("HH:mm")).replace(/{{\s*title\s*}}/gi,p));return window.app.foldManager.save(c,g),c}catch(c){console.error(`Failed to create file: '${f}'`,c),new e.Notice("Unable to create new file.")}}function lt(a,n){var i;return(i=n[O(a,"year")])!=null?i:null}function ot(){let a={};if(!Ne())return a;let{vault:n}=window.app,{folder:i}=z(),l=n.getAbstractFileByPath(e.normalizePath(i));if(!l)throw new it("Failed to find yearly notes folder");return e.Vault.recurseChildren(l,s=>{if(s instanceof e.TFile){let d=H(s,"year");if(d){let g=O(d,"year");a[g]=s}}}),a}function st(){var a,n;let{app:i}=window,l=i.internalPlugins.plugins["daily-notes"];if(l&&l.enabled)return!0;let s=i.plugins.getPlugin("periodic-notes");return s&&((n=(a=s.settings)==null?void 0:a.daily)==null?void 0:n.enabled)}function we(){var a,n;let{app:i}=window;if(i.plugins.getPlugin("calendar"))return!0;let l=i.plugins.getPlugin("periodic-notes");return l&&((n=(a=l.settings)==null?void 0:a.weekly)==null?void 0:n.enabled)}function ve(){var a,n;let{app:i}=window,l=i.plugins.getPlugin("periodic-notes");return l&&((n=(a=l.settings)==null?void 0:a.monthly)==null?void 0:n.enabled)}function be(){var a,n;let{app:i}=window,l=i.plugins.getPlugin("periodic-notes");return l&&((n=(a=l.settings)==null?void 0:a.quarterly)==null?void 0:n.enabled)}function Ne(){var a,n;let{app:i}=window,l=i.plugins.getPlugin("periodic-notes");return l&&((n=(a=l.settings)==null?void 0:a.yearly)==null?void 0:n.enabled)}function dt(a){let n={day:m,week:M,month:V,quarter:R,year:z}[a];return n()}function ut(a,n){return{day:fe,month:me,week:he}[a](n)}t.DEFAULT_DAILY_NOTE_FORMAT=r,t.DEFAULT_MONTHLY_NOTE_FORMAT=u,t.DEFAULT_QUARTERLY_NOTE_FORMAT=y,t.DEFAULT_WEEKLY_NOTE_FORMAT=o,t.DEFAULT_YEARLY_NOTE_FORMAT=v,t.appHasDailyNotesPluginLoaded=st,t.appHasMonthlyNotesPluginLoaded=ve,t.appHasQuarterlyNotesPluginLoaded=be,t.appHasWeeklyNotesPluginLoaded=we,t.appHasYearlyNotesPluginLoaded=Ne,t.createDailyNote=fe,t.createMonthlyNote=me,t.createPeriodicNote=ut,t.createQuarterlyNote=tt,t.createWeeklyNote=he,t.createYearlyNote=rt,t.getAllDailyNotes=Ve,t.getAllMonthlyNotes=Xe,t.getAllQuarterlyNotes=nt,t.getAllWeeklyNotes=Je,t.getAllYearlyNotes=ot,t.getDailyNote=Qe,t.getDailyNoteSettings=m,t.getDateFromFile=H,t.getDateFromPath=Ue,t.getDateUID=O,t.getMonthlyNote=Ze,t.getMonthlyNoteSettings=V,t.getPeriodicNoteSettings=dt,t.getQuarterlyNote=at,t.getQuarterlyNoteSettings=R,t.getTemplateInfo=U,t.getWeeklyNote=Be,t.getWeeklyNoteSettings=M,t.getYearlyNote=lt,t.getYearlyNoteSettings=z}),xe={};Ot(xe,{DEFAULT_SETTINGS:()=>ue,DailyNote:()=>Et,MonthlyNote:()=>It,PERIODIC_NOTES_EVENT_SETTING_UPDATED:()=>Vt,PLUGIN_NAME:()=>de,PeriodicNotesPluginAdapter:()=>Qt,QuarterlyNote:()=>_t,V0Provider:()=>Ie,V1Provider:()=>Ce,WeeklyNote:()=>Ct,YearlyNote:()=>Wt,checkCreateTime:()=>Q});Me.exports=St(xe);var Ae=require("obsidian"),T=B(J()),Dt=1e3,K=class{};function Q(t){return t.stat.ctime>new Date().getTime()-Dt}var Tt=30,W="day",Et=class extends K{constructor(){super(...arguments),this.date=(0,Ae.moment)()}getDate(){return(0,Ae.moment)().startOf(W)}async create(){let t=this.date.clone().startOf(W);return(0,T.createDailyNote)(t)}getAllPaths(){let t=(0,T.getAllDailyNotes)();return Object.entries(t).map(([e,r])=>r.path)}getCurrent(){return(0,T.getDailyNote)(this.date,(0,T.getAllDailyNotes)())}getNextDate(){return this.getDate().clone().add(1,W)}getPrevious(){let t=this.getDate().clone().subtract(1,W),e=t.clone().subtract(Tt,W),r=(0,T.getAllDailyNotes)(),o;do o=(0,T.getDailyNote)(t,r),t.subtract(1,W);while(!o&&t.isAfter(e));return o}isPresent(){let t=this.date.clone().startOf(W),e=(0,T.getAllDailyNotes)();return!!(0,T.getDailyNote)(t,e)}isValid(t){let e=(0,T.getDailyNote)(this.getDate(),(0,T.getAllDailyNotes)());return e?e.name===t.name&&Q(e):!1}},Oe=require("obsidian"),E=B(J()),xt=12,L="month",It=class extends K{constructor(){super(...arguments),this.date=(0,Oe.moment)()}getDate(){return(0,Oe.moment)().startOf(L)}async create(){let t=this.date.clone().startOf(L);return(0,E.createMonthlyNote)(t)}getAllPaths(){let t=(0,E.getAllMonthlyNotes)();return Object.entries(t).map(([e,r])=>r.path)}getCurrent(){return(0,E.getMonthlyNote)(this.date,(0,E.getAllMonthlyNotes)())}getNextDate(){return this.getDate().clone().add(1,L)}getPrevious(){let t=this.getDate().clone().subtract(1,L),e=t.clone().subtract(xt,L),r=(0,E.getAllMonthlyNotes)(),o;do o=(0,E.getMonthlyNote)(t,r),t.subtract(1,L);while(!o&&t.isAfter(e));return o}isPresent(){let t=this.date.clone().startOf(L),e=(0,E.getAllMonthlyNotes)();return!!(0,E.getMonthlyNote)(t,e)}isValid(t){let e=(0,E.getMonthlyNote)(this.getDate(),(0,E.getAllMonthlyNotes)());return e?e.name===t.name&&Q(e):!1}},Se=require("obsidian"),x=B(J()),Ft=4,Y="quarter",_t=class extends K{constructor(){super(...arguments),this.date=(0,Se.moment)()}getDate(){return(0,Se.moment)().startOf(Y)}async create(){let t=this.date.clone().startOf(Y);return(0,x.createQuarterlyNote)(t)}getAllPaths(){let t=(0,x.getAllQuarterlyNotes)();return Object.entries(t).map(([e,r])=>r.path)}getCurrent(){return(0,x.getQuarterlyNote)(this.date,(0,x.getAllQuarterlyNotes)())}getNextDate(){return this.getDate().clone().add(1,Y)}getPrevious(){let t=this.getDate().clone().subtract(1,Y),e=t.clone().subtract(Ft,Y),r=(0,x.getAllQuarterlyNotes)(),o;do o=(0,x.getQuarterlyNote)(t,r),t.subtract(1,Y);while(!o&&t.isAfter(e));return o}isPresent(){let t=this.date.clone().startOf(Y),e=(0,x.getAllQuarterlyNotes)();return!!(0,x.getQuarterlyNote)(t,e)}isValid(t){let e=(0,x.getQuarterlyNote)(this.getDate(),(0,x.getAllQuarterlyNotes)());return e?e.name===t.name&&Q(e):!1}},De=require("obsidian"),I=B(J()),$t=8,q="week",Ct=class extends K{constructor(){super(...arguments),this.date=(0,De.moment)()}getDate(){return(0,De.moment)().startOf(q)}async create(){let t=this.date.clone().startOf(q);return(0,I.createWeeklyNote)(t)}getAllPaths(){let t=(0,I.getAllWeeklyNotes)();return Object.entries(t).map(([e,r])=>r.path)}getCurrent(){return(0,I.getWeeklyNote)(this.date,(0,I.getAllWeeklyNotes)())}getNextDate(){return this.getDate().clone().add(1,q)}getPrevious(){let t=this.getDate().clone().subtract(1,q),e=t.clone().subtract($t,q),r=(0,I.getAllWeeklyNotes)(),o;do o=(0,I.getWeeklyNote)(t,r),t.subtract(1,q);while(!o&&t.isAfter(e));return o}isPresent(){let t=this.date.clone().startOf(q),e=(0,I.getAllWeeklyNotes)();return!!(0,I.getWeeklyNote)(t,e)}isValid(t){let e=(0,I.getWeeklyNote)(this.getDate(),(0,I.getAllWeeklyNotes)());return e?e.name===t.name&&Q(e):!1}},Te=require("obsidian"),F=B(J()),Mt=5,j="year",Wt=class extends K{constructor(){super(...arguments),this.date=(0,Te.moment)()}getDate(){return(0,Te.moment)().startOf(j)}async create(){let t=this.date.clone().startOf(j);return(0,F.createYearlyNote)(t)}getAllPaths(){let t=(0,F.getAllYearlyNotes)();return Object.entries(t).map(([e,r])=>r.path)}getCurrent(){return(0,F.getYearlyNote)(this.date,(0,F.getAllYearlyNotes)())}getNextDate(){return this.getDate().clone().add(1,j)}getPrevious(){let t=this.getDate().clone().subtract(1,j),e=t.clone().subtract(Mt,j),r=(0,F.getAllYearlyNotes)(),o;do o=(0,F.getYearlyNote)(t,r),t.subtract(1,j);while(!o&&t.isAfter(e));return o}isPresent(){let t=this.date.clone().startOf(j),e=(0,F.getAllYearlyNotes)();return!!(0,F.getYearlyNote)(t,e)}isValid(t){let e=(0,F.getYearlyNote)(this.getDate(),(0,F.getAllYearlyNotes)());return e?e.name===t.name&&Q(e):!1}},Ie=class{convertSettings(t){let e=t,r=Object.assign({},ue);return r.daily.available=e.daily.enabled,r.weekly.available=e.weekly.enabled,r.monthly.available=e.monthly.enabled,r.quarterly.available=e.quarterly.enabled,r.yearly.available=e.yearly.enabled,r}};function Fe(){}function _e(t){return t()}function $e(t){t.forEach(_e)}function Lt(t){return typeof t=="function"}function Yt(t){return Object.keys(t).length===0}function qt(t,...e){if(t==null)return Fe;let r=t.subscribe(...e);return r.unsubscribe?()=>r.unsubscribe():r}function jt(t){let e;return qt(t,r=>e=r)(),e}var Jt=Promise.resolve(),Kt=typeof window!="undefined"?window:typeof globalThis!="undefined"?globalThis:global;function Ut(t,e){let r=t.$$;r.fragment!==null&&($e(r.on_destroy),r.fragment&&r.fragment.d(e),r.on_destroy=r.fragment=null,r.ctx=[])}var Ht;typeof HTMLElement=="function"&&(Ht=class extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){let{on_mount:t}=this.$$;this.$$.on_disconnect=t.map(_e).filter(Lt);for(let e in this.$$.slotted)this.appendChild(this.$$.slotted[e])}attributeChangedCallback(t,e,r){this[t]=r}disconnectedCallback(){$e(this.$$.on_disconnect)}$destroy(){Ut(this,1),this.$destroy=Fe}$on(t,e){let r=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return r.push(e),()=>{let o=r.indexOf(e);o!==-1&&r.splice(o,1)}}$set(t){this.$$set&&!Yt(t)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}});var Ce=class{convertSettings(t){var e,r,o,u,y;let v=jt(t),b=v.calendarSets.filter(M=>M.id===v.activeCalendarSet),m=Object.assign({},ue);return m.daily.available=!1,m.weekly.available=!1,m.monthly.available=!1,m.quarterly.available=!1,m.yearly.available=!1,b.length&&(m.daily.available=((e=b[0].day)==null?void 0:e.enabled)||!1,m.weekly.available=((r=b[0].week)==null?void 0:r.enabled)||!1,m.monthly.available=((o=b[0].month)==null?void 0:o.enabled)||!1,m.quarterly.available=((u=b[0].quarter)==null?void 0:u.enabled)||!1,m.yearly.available=((y=b[0].year)==null?void 0:y.enabled)||!1),m}},Qt=class{constructor(t){this.app=t}getProvider(){return this.getPlugin().settings.daily!==void 0?new Ie:new Ce}getPlugin(){return this.app.plugins.getPlugin(de)}isEnabled(){return this.app.plugins.enabledPlugins.has(de)}convertSettings(){return this.getProvider().convertSettings(this.getPlugin().settings)}},Vt="periodic-notes:settings-updated",de="periodic-notes",ue={daily:{available:!1},weekly:{available:!1},monthly:{available:!1},quarterly:{available:!1},yearly:{available:!1}}});var Gt={};mt(Gt,{default:()=>ie});module.exports=wt(Gt);var re=require("obsidian"),le=ke(ce());var We="auto-periodic-notes:settings-updated";function P(t){console.debug(`[JH:APN] ${t}`)}var ne=require("obsidian");var _=ke(ce()),Rt=1e3,Z=class{constructor(e,r){this.workspace=e,this.waitTimeout=r||Rt}async checkAndCreateNotes(e){P("Checking if any new notes need to be created"),this.workspaceLeaves={},await this.checkAndCreateSingleNote(e.yearly,new _.YearlyNote,"yearly",e.alwaysOpen),await this.checkAndCreateSingleNote(e.quarterly,new _.QuarterlyNote,"quarterly",e.alwaysOpen),await this.checkAndCreateSingleNote(e.monthly,new _.MonthlyNote,"monthly",e.alwaysOpen),await this.checkAndCreateSingleNote(e.weekly,new _.WeeklyNote,"weekly",e.alwaysOpen),await this.checkAndCreateSingleNote(e.daily,new _.DailyNote,"daily",e.alwaysOpen)}async checkAndCreateSingleNote(e,r,o,u){if(e.available&&e.enabled)if(P(`Checking if ${o} note needs to be created`),r.isPresent()){if(u){P(`Set to always open notes, getting current ${o} note and checking if it needs to be opened`);let y=r.getCurrent();await this.handleClose(e,r,y),await this.handleOpen(e,y)}}else{if(o==="daily"&&e.excludeWeekends){let v=(0,ne.moment)();if(v.format("dd")==="Sa"||v.format("dd")==="Su"){P("Not creating new note as it is a weekend");return}}P(`Creating new ${o} note`);let y=await r.create();new ne.Notice(`Today's ${o} note has been created.`,5e3),await this.handleClose(e,r,y),await this.handleOpen(e,y)}}getOpenWorkspaceLeaves(){return Object.keys(this.workspaceLeaves).length||this.workspace.iterateAllLeaves(e=>{e.view.getState()&&typeof e.view.getState().file!="undefined"&&(this.workspaceLeaves[e.view.getState().file]=e)}),this.workspaceLeaves}async handleClose(e,r,o){if(e.closeExisting){P("Checking for any existing notes to close");let u=r.getAllPaths(),y=[];if(Object.entries(this.getOpenWorkspaceLeaves()).forEach(([v,b])=>{u.indexOf(v)>-1&&y.push(b)}),Object.keys(this.getOpenWorkspaceLeaves()).indexOf(o.path)===-1){P("Found "+y.length+" tab(s) to close");for(let v of y)v.detach()}await new Promise(v=>setTimeout(v,this.waitTimeout))}}async handleOpen(e,r){if(e.openAndPin&&Object.keys(this.getOpenWorkspaceLeaves()).indexOf(r.path)===-1){P("Opening note in new tab");let o=this.workspace.getLeaf(!0);await o.openFile(r),o.setPinned(!0)}}};var X=Object.freeze({available:!1,enabled:!1,closeExisting:!1,openAndPin:!1}),zt=Object.freeze({alwaysOpen:!1,daily:{...X,excludeWeekends:!1},weekly:{...X},monthly:{...X},quarterly:{...X},yearly:{...X}});function Le(t){return Object.assign({},zt,t)}var C=require("obsidian"),ee=class extends C.PluginSettingTab{constructor(e,r){super(e,r),this.plugin=r}display(){this.containerEl.empty();let e=this.plugin.settings,r=["daily","weekly","monthly","quarterly","yearly"];if(!e.daily.available&&!e.weekly.available&&!e.monthly.available&&!e.quarterly.available&&!e.yearly.available){let o=this.containerEl.createDiv({cls:"settings-banner"});new C.Setting(o).setName("No periodic notes enabled").setHeading().setDesc("No periodic notes settings are enabled. You must turn on one of daily, weekly, monthly, quarterly or yearly notes within the Periodic Notes plugin settings to be able to configure them to generate automatically.")}this.containerEl.createEl("h3",{text:"All periodic notes"}),new C.Setting(this.containerEl).setName("Always open periodic notes").setDesc("When opening Obsidian or checking notes, always open your periodic notes even when they haven't just been created. This can be useful for maintaining a consistent workspace with pinned notes each time you start your day.").addToggle(o=>{o.setValue(e.alwaysOpen).onChange(async u=>{e.alwaysOpen=u,await this.plugin.updateSettings(e)})});for(let o of r)e[o].available&&(this.containerEl.createEl("h3",{text:`Automatic ${o} notes`}),new C.Setting(this.containerEl).setName(`Enable automatic ${o} notes`).setDesc(`Create new ${o} notes automatically using periodic notes location and template.`).addToggle(u=>{u.setValue(e[o].enabled).onChange(async y=>{e[o].enabled=y,await this.plugin.updateSettings(e)})}),o==="daily"&&new C.Setting(this.containerEl).setName("Exclude weekends").setDesc("Only create new daily notes Monday - Friday, excluding Saturdays and Sundays.").addToggle(u=>{u.setValue(e[o].excludeWeekends).onChange(async y=>{e[o].excludeWeekends=y,await this.plugin.updateSettings(e)})}),new C.Setting(this.containerEl).setName(`Open and pin new ${o} notes`).setDesc("When enabled, whether to automatically open the new note and pin it to your tabs.").addToggle(u=>{u.setValue(e[o].openAndPin).onChange(async y=>{e[o].openAndPin=y,await this.plugin.updateSettings(e)})}),new C.Setting(this.containerEl).setName(`Close older ${o} notes`).setDesc(`When creating new notes, automatically close any older and open ${o} notes.`).addToggle(u=>{u.setValue(e[o].closeExisting).onChange(async y=>{e[o].closeExisting=y,await this.plugin.updateSettings(e)})}))}};var ie=class extends re.Plugin{constructor(e,r){super(e,r),this.settings={},this.periodicNotesPlugin=new le.PeriodicNotesPluginAdapter(e),this.notes=new Z(e.workspace)}async onload(){this.updateSettings=this.updateSettings.bind(this),await this.loadSettings(),this.app.workspace.onLayoutReady(this.onLayoutReady.bind(this))}onLayoutReady(){if(!this.periodicNotesPlugin.isEnabled()){new re.Notice("The Periodic Notes plugin must be installed and available for Auto Periodic Notes to work.",1e4);return}let e=this.app.workspace;this.registerEvent(e.on(le.PERIODIC_NOTES_EVENT_SETTING_UPDATED,this.syncPeriodicNotesSettings.bind(this))),this.syncPeriodicNotesSettings(),this.addSettingTab(new ee(this.app,this)),this.registerInterval(window.setInterval(()=>{this.notes.checkAndCreateNotes(this.settings)},3e5)),this.notes.checkAndCreateNotes(this.settings)}async loadSettings(){this.settings=Le(await this.loadData()),P("Loaded settings: "+JSON.stringify(this.settings))}async updateSettings(e){this.settings=e,await this.saveData(this.settings),this.onSettingsUpdate(),P("Saved settings: "+JSON.stringify(this.settings))}syncPeriodicNotesSettings(){P("Received new settings from Periodic Notes plugin");let e=this.periodicNotesPlugin.convertSettings();this.settings.daily.available=e.daily.available,this.settings.weekly.available=e.weekly.available,this.settings.monthly.available=e.monthly.available,this.settings.quarterly.available=e.quarterly.available,this.settings.yearly.available=e.yearly.available,this.updateSettings(this.settings)}onSettingsUpdate(){this.app.workspace.trigger(We)}};

/* nosourcemap */